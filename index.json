[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/account.js",
    "content": "// @flow\nimport nacl from 'tweetnacl';\nimport bs58 from 'bs58';\nimport type {KeyPair} from 'tweetnacl';\n\n/**\n * Base 58 encoded public key\n *\n * @typedef {string} PublicKey\n */\nexport type PublicKey = string;\n\n/**\n * An account key pair (public and secret keys).\n */\nexport class Account {\n  _keypair: KeyPair;\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey: ?Buffer = null) {\n    if (secretKey) {\n      this._keypair = nacl.sign.keyPair.fromSecretKey(secretKey);\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey(): PublicKey {\n    return bs58.encode(this._keypair.publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account\n   */\n  get secretKey(): Buffer {\n    return this._keypair.secretKey;\n  }\n}\n\n",
    "static": true,
    "longname": "/home/travis/build/solana-labs/solana-web3.js/src/account.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "typedef",
    "name": "PublicKey",
    "memberof": "src/account.js",
    "static": true,
    "longname": "src/account.js~PublicKey",
    "access": "public",
    "description": "Base 58 encoded public key",
    "lineNumber": 11,
    "type": {
      "types": [
        "string"
      ],
      "optional": false,
      "name": "PublicKey"
    }
  },
  {
    "__docId__": 50,
    "kind": "class",
    "name": "Account",
    "memberof": "src/account.js",
    "static": true,
    "longname": "src/account.js~Account",
    "access": "public",
    "export": true,
    "importPath": "@solana/web3",
    "importStyle": "{Account}",
    "description": "An account key pair (public and secret keys).",
    "lineNumber": 16,
    "interface": false
  },
  {
    "__docId__": 51,
    "kind": "member",
    "name": "_keypair",
    "memberof": "src/account.js~Account",
    "static": false,
    "longname": "src/account.js~Account#_keypair",
    "access": "private",
    "description": "",
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "KeyPair"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 52,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/account.js~Account",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/account.js~Account#constructor",
    "access": "public",
    "description": "Create a new Account object\n\nIf the secretKey parameter is not provided a new key pair is randomly\ncreated for the account ",
    "lineNumber": 27,
    "params": [
      {
        "nullable": true,
        "types": [
          "Buffer"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "secretKey",
        "description": "Secret key for the account"
      }
    ]
  },
  {
    "__docId__": 55,
    "kind": "get",
    "name": "publicKey",
    "memberof": "src/account.js~Account",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/account.js~Account#publicKey",
    "access": "public",
    "description": "The public key for this account ",
    "lineNumber": 38,
    "type": {
      "nullable": null,
      "types": [
        "PublicKey"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 56,
    "kind": "get",
    "name": "secretKey",
    "memberof": "src/account.js~Account",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/account.js~Account#secretKey",
    "access": "public",
    "description": "The **unencrypted** secret key for this account ",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "Buffer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 57,
    "kind": "file",
    "name": "src/budget-program.js",
    "content": "// @flow\n\nimport {Transaction} from './transaction';\nimport type {PublicKey} from './account';\n\n/**\n * Represents a condition that is met by executing a `applySignature()`\n * transaction\n *\n * @typedef {Object} SignatureCondition\n * @property {string} type Must equal the string 'timestamp'\n * @property {PublicKey} from Public key from which `applySignature()` will be accepted from\n */\nexport type SignatureCondition = {\n  type: 'signature';\n  from: PublicKey;\n};\n\n/**\n * Represents a condition that is met by executing a `applyTimestamp()`\n * transaction\n *\n * @typedef {Object} TimeStampCondition\n * @property {string} type Must equal the string 'timestamp'\n * @property {PublicKey} from Public key from which `applyTimestamp()` will be accepted from\n * @property {Date} when The timestamp that was observed\n */\nexport type TimeStampCondition = {\n  type: 'timestamp';\n  from: PublicKey;\n  when: Date;\n};\n\n/**\n * Represents a payment to a given public key\n *\n * @typedef {Object} Payment\n * @property {number} amount Number of tokens\n * @property {PublicKey} to Public key of the recipient\n */\nexport type Payment = {\n  amount: number;\n  to: PublicKey;\n}\n\n/**\n * A condition that can unlock a payment\n *\n * @typedef {SignatureCondition|TimeStampCondition} BudgetCondition\n */\nexport type BudgetCondition = SignatureCondition | TimeStampCondition;\n\n/**\n * @private\n */\nfunction serializePayment(payment: Payment): Buffer {\n  const toData = Transaction.serializePublicKey(payment.to);\n  const userdata = Buffer.alloc(8 + toData.length);\n  userdata.writeUInt32LE(payment.amount, 0);\n  toData.copy(userdata, 8);\n  return userdata;\n}\n\n/**\n * @private\n */\nfunction serializeDate(\n  when: Date\n): Buffer {\n  const userdata = Buffer.alloc(8 + 20);\n  userdata.writeUInt32LE(20, 0); // size of timestamp as u64\n\n  function iso(date) {\n    function pad(number) {\n      if (number < 10) {\n        return '0' + number;\n      }\n      return number;\n    }\n\n    return date.getUTCFullYear() +\n      '-' + pad(date.getUTCMonth() + 1) +\n      '-' + pad(date.getUTCDate()) +\n      'T' + pad(date.getUTCHours()) +\n      ':' + pad(date.getUTCMinutes()) +\n      ':' + pad(date.getUTCSeconds()) +\n      'Z';\n  }\n  userdata.write(iso(when), 8);\n  return userdata;\n}\n\n/**\n * @private\n */\nfunction serializeCondition(condition: BudgetCondition) {\n  switch(condition.type) {\n  case 'timestamp':\n  {\n    const date = serializeDate(condition.when);\n    const from = Transaction.serializePublicKey(condition.from);\n\n    const userdata = Buffer.alloc(4 + date.length + from.length);\n    userdata.writeUInt32LE(0, 0); // Condition enum = Timestamp\n    date.copy(userdata, 4);\n    from.copy(userdata, 4 + date.length);\n    return userdata;\n  }\n  case 'signature':\n  {\n    const from = Transaction.serializePublicKey(condition.from);\n\n    const userdata = Buffer.alloc(4 + from.length);\n    userdata.writeUInt32LE(1, 0); // Condition enum = Signature\n    from.copy(userdata, 4);\n    return userdata;\n  }\n  default:\n    throw new Error(`Unknown condition type: ${condition.type}`);\n  }\n}\n\n\n/**\n * Factory class for transactions to interact with the Budget program\n */\nexport class BudgetProgram {\n\n  /**\n   * Public key that identifies the Budget program\n   */\n  static get programId(): PublicKey {\n    return '4uQeVj5tqViQh7yWWGStvkEG1Zmhx6uasJtWCJziofM';\n  }\n\n  /**\n   * The amount of space this program requires\n   */\n  static get space(): number {\n    return 128;\n  }\n\n\n  /**\n   * Creates a timestamp condition\n   */\n  static timestampCondition(from: PublicKey, when: Date) : TimeStampCondition {\n    return {\n      type: 'timestamp',\n      from,\n      when,\n    };\n  }\n\n  /**\n   * Creates a signature condition\n   */\n  static signatureCondition(from: PublicKey) : SignatureCondition {\n    return {\n      type: 'signature',\n      from,\n    };\n  }\n\n  /**\n   * Generates a transaction that transfers tokens once any of the conditions are met\n   */\n  static pay(\n    from: PublicKey,\n    program: PublicKey,\n    to: PublicKey,\n    amount: number,\n    ...conditions: Array<BudgetCondition>\n  ): Transaction {\n    const userdata = Buffer.alloc(1024);\n    let pos = 0;\n    userdata.writeUInt32LE(0, pos); // NewContract instruction\n    pos += 4;\n\n    userdata.writeUInt32LE(amount, pos); // Contract.tokens\n    pos += 8;\n\n    switch (conditions.length) {\n    case 0:\n      userdata.writeUInt32LE(0, pos); // Budget enum = Pay\n      pos += 4;\n\n      {\n        const payment = serializePayment({amount, to});\n        payment.copy(userdata, pos);\n        pos += payment.length;\n      }\n\n      return new Transaction({\n        fee: 0,\n        keys: [from, to],\n        programId: this.programId,\n        userdata: userdata.slice(0, pos),\n      });\n    case 1:\n      userdata.writeUInt32LE(1, pos); // Budget enum = After\n      pos += 4;\n      {\n        const condition = conditions[0];\n\n        const conditionData = serializeCondition(condition);\n        conditionData.copy(userdata, pos);\n        pos += conditionData.length;\n\n        const paymentData = serializePayment({amount, to});\n        paymentData.copy(userdata, pos);\n        pos += paymentData.length;\n      }\n\n      return new Transaction({\n        fee: 0,\n        keys: [from, program, to],\n        programId: this.programId,\n        userdata: userdata.slice(0, pos),\n      });\n\n    case 2:\n      userdata.writeUInt32LE(2, pos); // Budget enum = Or\n      pos += 4;\n\n      for (let condition of conditions) {\n        const conditionData = serializeCondition(condition);\n        conditionData.copy(userdata, pos);\n        pos += conditionData.length;\n\n        const paymentData = serializePayment({amount, to});\n        paymentData.copy(userdata, pos);\n        pos += paymentData.length;\n      }\n\n      return new Transaction({\n        fee: 0,\n        keys: [from, program, to],\n        programId: this.programId,\n        userdata: userdata.slice(0, pos),\n      });\n\n    default:\n      throw new Error(`A maximum of two conditions are support: ${conditions.length} provided`);\n    }\n  }\n\n  /**\n   * Generates a transaction that transfers tokens once both conditions are met\n   */\n  static payOnBoth(\n    from: PublicKey,\n    program: PublicKey,\n    to: PublicKey,\n    amount: number,\n    condition1: BudgetCondition,\n    condition2: BudgetCondition,\n  ): Transaction {\n    const userdata = Buffer.alloc(1024);\n    let pos = 0;\n    userdata.writeUInt32LE(0, pos); // NewContract instruction\n    pos += 4;\n\n    userdata.writeUInt32LE(amount, pos); // Contract.tokens\n    pos += 8;\n\n    userdata.writeUInt32LE(3, pos); // Budget enum = And\n    pos += 4;\n\n    for (let condition of [condition1, condition2]) {\n      const conditionData = serializeCondition(condition);\n      conditionData.copy(userdata, pos);\n      pos += conditionData.length;\n    }\n\n    const paymentData = serializePayment({amount, to});\n    paymentData.copy(userdata, pos);\n    pos += paymentData.length;\n\n    return new Transaction({\n      fee: 0,\n      keys: [from, program, to],\n      programId: this.programId,\n      userdata: userdata.slice(0, pos),\n    });\n  }\n\n\n  /**\n   * Generates a transaction that applies a timestamp, which could enable a\n   * pending payment to proceed.\n   */\n  static applyTimestamp(from: PublicKey, program: PublicKey, to: PublicKey, when: Date): Transaction {\n    const whenData = serializeDate(when);\n    const userdata = Buffer.alloc(4 + whenData.length);\n\n    userdata.writeUInt32LE(1, 0); // ApplyTimestamp instruction\n    whenData.copy(userdata, 4);\n\n    return new Transaction({\n      fee: 0,\n      keys: [from, program, to],\n      programId: this.programId,\n      userdata,\n    });\n  }\n\n  /**\n   * Generates a transaction that applies a signature, which could enable a\n   * pending payment to proceed.\n   */\n  static applySignature(from: PublicKey, program: PublicKey, to: PublicKey): Transaction {\n    const userdata = Buffer.alloc(4);\n    userdata.writeUInt32LE(2, 0); // ApplySignature instruction\n\n    return new Transaction({\n      fee: 0,\n      keys: [from, program, to],\n      programId: this.programId,\n      userdata,\n    });\n  }\n}\n",
    "static": true,
    "longname": "/home/travis/build/solana-labs/solana-web3.js/src/budget-program.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 58,
    "kind": "typedef",
    "name": "SignatureCondition",
    "memberof": "src/budget-program.js",
    "static": true,
    "longname": "src/budget-program.js~SignatureCondition",
    "access": "public",
    "description": "Represents a condition that is met by executing a `applySignature()`\ntransaction",
    "lineNumber": 14,
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "Must equal the string 'timestamp'"
      },
      {
        "nullable": null,
        "types": [
          "PublicKey"
        ],
        "spread": false,
        "optional": false,
        "name": "from",
        "description": "Public key from which `applySignature()` will be accepted from"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "SignatureCondition"
    }
  },
  {
    "__docId__": 59,
    "kind": "typedef",
    "name": "TimeStampCondition",
    "memberof": "src/budget-program.js",
    "static": true,
    "longname": "src/budget-program.js~TimeStampCondition",
    "access": "public",
    "description": "Represents a condition that is met by executing a `applyTimestamp()`\ntransaction",
    "lineNumber": 28,
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "Must equal the string 'timestamp'"
      },
      {
        "nullable": null,
        "types": [
          "PublicKey"
        ],
        "spread": false,
        "optional": false,
        "name": "from",
        "description": "Public key from which `applyTimestamp()` will be accepted from"
      },
      {
        "nullable": null,
        "types": [
          "Date"
        ],
        "spread": false,
        "optional": false,
        "name": "when",
        "description": "The timestamp that was observed"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "TimeStampCondition"
    }
  },
  {
    "__docId__": 60,
    "kind": "typedef",
    "name": "Payment",
    "memberof": "src/budget-program.js",
    "static": true,
    "longname": "src/budget-program.js~Payment",
    "access": "public",
    "description": "Represents a payment to a given public key",
    "lineNumber": 41,
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "amount",
        "description": "Number of tokens"
      },
      {
        "nullable": null,
        "types": [
          "PublicKey"
        ],
        "spread": false,
        "optional": false,
        "name": "to",
        "description": "Public key of the recipient"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "Payment"
    }
  },
  {
    "__docId__": 61,
    "kind": "typedef",
    "name": "BudgetCondition",
    "memberof": "src/budget-program.js",
    "static": true,
    "longname": "src/budget-program.js~BudgetCondition",
    "access": "public",
    "description": "A condition that can unlock a payment",
    "lineNumber": 51,
    "type": {
      "types": [
        "SignatureCondition",
        "TimeStampCondition"
      ],
      "optional": false,
      "name": "BudgetCondition"
    }
  },
  {
    "__docId__": 62,
    "kind": "function",
    "name": "serializePayment",
    "memberof": "src/budget-program.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/budget-program.js~serializePayment",
    "access": "private",
    "export": false,
    "importPath": "@solana/web3",
    "importStyle": null,
    "description": "  ",
    "lineNumber": 56,
    "params": [
      {
        "nullable": null,
        "types": [
          "Payment"
        ],
        "spread": false,
        "optional": false,
        "name": "payment",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Buffer"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 63,
    "kind": "function",
    "name": "serializeDate",
    "memberof": "src/budget-program.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/budget-program.js~serializeDate",
    "access": "private",
    "export": false,
    "importPath": "@solana/web3",
    "importStyle": null,
    "description": "  ",
    "lineNumber": 67,
    "params": [
      {
        "nullable": null,
        "types": [
          "Date"
        ],
        "spread": false,
        "optional": false,
        "name": "when",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Buffer"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 64,
    "kind": "function",
    "name": "serializeCondition",
    "memberof": "src/budget-program.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/budget-program.js~serializeCondition",
    "access": "private",
    "export": false,
    "importPath": "@solana/web3",
    "importStyle": null,
    "description": " ",
    "lineNumber": 96,
    "params": [
      {
        "nullable": null,
        "types": [
          "BudgetCondition"
        ],
        "spread": false,
        "optional": false,
        "name": "condition",
        "description": ""
      }
    ],
    "ignore": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 65,
    "kind": "class",
    "name": "BudgetProgram",
    "memberof": "src/budget-program.js",
    "static": true,
    "longname": "src/budget-program.js~BudgetProgram",
    "access": "public",
    "export": true,
    "importPath": "@solana/web3",
    "importStyle": "{BudgetProgram}",
    "description": "Factory class for transactions to interact with the Budget program",
    "lineNumber": 127,
    "interface": false
  },
  {
    "__docId__": 66,
    "kind": "get",
    "name": "programId",
    "memberof": "src/budget-program.js~BudgetProgram",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/budget-program.js~BudgetProgram.programId",
    "access": "public",
    "description": "Public key that identifies the Budget program ",
    "lineNumber": 132,
    "type": {
      "nullable": null,
      "types": [
        "PublicKey"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 67,
    "kind": "get",
    "name": "space",
    "memberof": "src/budget-program.js~BudgetProgram",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/budget-program.js~BudgetProgram.space",
    "access": "public",
    "description": "The amount of space this program requires ",
    "lineNumber": 139,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "timestampCondition",
    "memberof": "src/budget-program.js~BudgetProgram",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/budget-program.js~BudgetProgram.timestampCondition",
    "access": "public",
    "description": "Creates a timestamp condition  ",
    "lineNumber": 147,
    "params": [
      {
        "nullable": null,
        "types": [
          "PublicKey"
        ],
        "spread": false,
        "optional": false,
        "name": "from",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Date"
        ],
        "spread": false,
        "optional": false,
        "name": "when",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TimeStampCondition"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "signatureCondition",
    "memberof": "src/budget-program.js~BudgetProgram",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/budget-program.js~BudgetProgram.signatureCondition",
    "access": "public",
    "description": "Creates a signature condition  ",
    "lineNumber": 158,
    "params": [
      {
        "nullable": null,
        "types": [
          "PublicKey"
        ],
        "spread": false,
        "optional": false,
        "name": "from",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SignatureCondition"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "pay",
    "memberof": "src/budget-program.js~BudgetProgram",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/budget-program.js~BudgetProgram.pay",
    "access": "public",
    "description": "Generates a transaction that transfers tokens once any of the conditions are met  ",
    "lineNumber": 168,
    "params": [
      {
        "nullable": null,
        "types": [
          "PublicKey"
        ],
        "spread": false,
        "optional": false,
        "name": "from",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "PublicKey"
        ],
        "spread": false,
        "optional": false,
        "name": "program",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "PublicKey"
        ],
        "spread": false,
        "optional": false,
        "name": "to",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "amount",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "...Array<BudgetCondition>"
        ],
        "spread": true,
        "optional": false,
        "name": "conditions",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Transaction"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "payOnBoth",
    "memberof": "src/budget-program.js~BudgetProgram",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/budget-program.js~BudgetProgram.payOnBoth",
    "access": "public",
    "description": "Generates a transaction that transfers tokens once both conditions are met  ",
    "lineNumber": 251,
    "params": [
      {
        "nullable": null,
        "types": [
          "PublicKey"
        ],
        "spread": false,
        "optional": false,
        "name": "from",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "PublicKey"
        ],
        "spread": false,
        "optional": false,
        "name": "program",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "PublicKey"
        ],
        "spread": false,
        "optional": false,
        "name": "to",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "amount",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "BudgetCondition"
        ],
        "spread": false,
        "optional": false,
        "name": "condition1",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "BudgetCondition"
        ],
        "spread": false,
        "optional": false,
        "name": "condition2",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Transaction"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 72,
    "kind": "method",
    "name": "applyTimestamp",
    "memberof": "src/budget-program.js~BudgetProgram",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/budget-program.js~BudgetProgram.applyTimestamp",
    "access": "public",
    "description": "Generates a transaction that applies a timestamp, which could enable a\npending payment to proceed.  ",
    "lineNumber": 293,
    "params": [
      {
        "nullable": null,
        "types": [
          "PublicKey"
        ],
        "spread": false,
        "optional": false,
        "name": "from",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "PublicKey"
        ],
        "spread": false,
        "optional": false,
        "name": "program",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "PublicKey"
        ],
        "spread": false,
        "optional": false,
        "name": "to",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Date"
        ],
        "spread": false,
        "optional": false,
        "name": "when",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Transaction"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "applySignature",
    "memberof": "src/budget-program.js~BudgetProgram",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/budget-program.js~BudgetProgram.applySignature",
    "access": "public",
    "description": "Generates a transaction that applies a signature, which could enable a\npending payment to proceed.  ",
    "lineNumber": 312,
    "params": [
      {
        "nullable": null,
        "types": [
          "PublicKey"
        ],
        "spread": false,
        "optional": false,
        "name": "from",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "PublicKey"
        ],
        "spread": false,
        "optional": false,
        "name": "program",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "PublicKey"
        ],
        "spread": false,
        "optional": false,
        "name": "to",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Transaction"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 74,
    "kind": "file",
    "name": "src/connection.js",
    "content": "// @flow\n\nimport assert from 'assert';\nimport fetch from 'node-fetch';\nimport jayson from 'jayson/lib/client/browser';\nimport {struct} from 'superstruct';\nimport bs58 from 'bs58';\n\nimport {Transaction} from './transaction';\nimport type {Account, PublicKey} from './account';\nimport type {TransactionSignature, TransactionId} from './transaction';\n\ntype RpcRequest = (methodName: string, args: Array<any>) => any;\n\nfunction createRpcRequest(url): RpcRequest {\n  const server = jayson(\n    async (request, callback) => {\n      const options = {\n        method: 'POST',\n        body: request,\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      };\n\n      try {\n        const res = await fetch(url, options);\n        const text = await res.text();\n        callback(null, text);\n      } catch (err) {\n        callback(err);\n      }\n    }\n  );\n\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      server.request(method, args, (err, response) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n\n/**\n * Expected JSON RPC response for the \"getBalance\" message\n */\nconst GetBalanceRpcResult = struct({\n  jsonrpc: struct.literal('2.0'),\n  id: 'string',\n  error: 'any?',\n  result: 'number?',\n});\n\n\n/**\n * @private\n */\nfunction jsonRpcResult(resultDescription: any) {\n  const jsonRpcVersion = struct.literal('2.0');\n  return struct.union([\n    struct({\n      jsonrpc: jsonRpcVersion,\n      id: 'string',\n      error: 'any'\n    }),\n    struct({\n      jsonrpc: jsonRpcVersion,\n      id: 'string',\n      error: 'null?',\n      result: resultDescription,\n    }),\n  ]);\n}\n\n\n/**\n * Expected JSON RPC response for the \"getAccountInfo\" message\n */\nconst GetAccountInfoRpcResult = jsonRpcResult({\n  program_id: 'array',\n  tokens: 'number',\n  userdata: 'array',\n});\n\n\n/**\n * Expected JSON RPC response for the \"confirmTransaction\" message\n */\nconst ConfirmTransactionRpcResult = jsonRpcResult('boolean');\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatus\" message\n */\nconst GetSignatureStatusRpcResult = jsonRpcResult(struct.enum([\n  'Confirmed',\n  'SignatureNotFound',\n  'ProgramRuntimeError',\n  'GenericFailure',\n]));\n\n/**\n * Expected JSON RPC response for the \"getTransactionCount\" message\n */\nconst GetTransactionCountRpcResult = jsonRpcResult('number');\n\n/**\n * Expected JSON RPC response for the \"getLastId\" message\n */\nconst GetLastId = jsonRpcResult('string');\n\n/**\n * Expected JSON RPC response for the \"getFinality\" message\n */\nconst GetFinalityRpcResult = jsonRpcResult('number');\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult('string');\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTokensRpcResult = jsonRpcResult('string');\n\n/**\n * Information describing an account\n *\n * @typedef {Object} AccountInfo\n * @property {number} tokens Number of tokens assigned to the account\n * @property {PublicKey} programId Identifier of the program assigned to the account\n * @property {?Buffer} userdata Optional userdata assigned to the account\n */\ntype AccountInfo = {\n  tokens: number,\n  programId: PublicKey,\n  userdata: Buffer | null,\n}\n\n/**\n * Possible signature status values\n *\n * @typedef {string} SignatureStatus\n */\ntype SignatureStatus = 'Confirmed' | 'SignatureNotFound' | 'ProgramRuntimeError' | 'GenericFailure';\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  _rpcRequest: RpcRequest;\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   */\n  constructor(endpoint: string) {\n    if (typeof endpoint !== 'string') {\n      throw new Error('Connection endpoint not specified');\n    }\n    this._rpcRequest = createRpcRequest(endpoint);\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(publicKey: PublicKey): Promise<number> {\n    const unsafeRes = await this._rpcRequest(\n      'getBalance',\n      [publicKey]\n    );\n    const res = GetBalanceRpcResult(unsafeRes);\n    if (res.error) {\n      throw new Error(res.error.message);\n    }\n    assert(typeof res.result !== 'undefined');\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(publicKey: PublicKey): Promise<AccountInfo> {\n    const unsafeRes = await this._rpcRequest(\n      'getAccountInfo',\n      [publicKey]\n    );\n    const res = GetAccountInfoRpcResult(unsafeRes);\n    if (res.error) {\n      throw new Error(res.error.message);\n    }\n\n    const {result} = res;\n    assert(typeof result !== 'undefined');\n\n    let userdata = null;\n    if (result.userdata.length > 0) {\n      userdata = Buffer.from(result.userdata);\n    }\n    return {\n      tokens: result.tokens,\n      programId: bs58.encode(result.program_id),\n      userdata,\n    };\n  }\n\n  /**\n   * Confirm the transaction identified by the specified signature\n   */\n  async confirmTransaction(signature: TransactionSignature): Promise<boolean> {\n    const unsafeRes = await this._rpcRequest(\n      'confirmTransaction',\n      [signature]\n    );\n    const res = ConfirmTransactionRpcResult(unsafeRes);\n    if (res.error) {\n      throw new Error(res.error.message);\n    }\n    assert(typeof res.result !== 'undefined');\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the network\n   */\n  async getSignatureStatus(signature: TransactionSignature): Promise<SignatureStatus> {\n    const unsafeRes = await this._rpcRequest('getSignatureStatus', [signature]);\n    const res = GetSignatureStatusRpcResult(unsafeRes);\n    if (res.error) {\n      throw new Error(res.error.message);\n    }\n    assert(typeof res.result !== 'undefined');\n    return res.result;\n  }\n\n\n  /**\n   * Fetch the current transaction count of the network\n   */\n  async getTransactionCount(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getTransactionCount', []);\n    const res = GetTransactionCountRpcResult(unsafeRes);\n    if (res.error) {\n      throw new Error(res.error.message);\n    }\n    assert(typeof res.result !== 'undefined');\n    return Number(res.result);\n  }\n\n  /**\n   * Fetch the identifier to the latest transaction on the network\n   */\n  async getLastId(): Promise<TransactionId> {\n    const unsafeRes = await this._rpcRequest('getLastId', []);\n    const res = GetLastId(unsafeRes);\n    if (res.error) {\n      throw new Error(res.error.message);\n    }\n    assert(typeof res.result !== 'undefined');\n    return res.result;\n  }\n\n  /**\n   * Return the current network finality time in millliseconds\n   */\n  async getFinality(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFinality', []);\n    const res = GetFinalityRpcResult(unsafeRes);\n    if (res.error) {\n      throw new Error(res.error.message);\n    }\n    assert(typeof res.result !== 'undefined');\n    return Number(res.result);\n  }\n\n  /**\n   * Request an allocation of tokens to the specified account\n   */\n  async requestAirdrop(to: PublicKey, amount: number): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [to, amount]);\n    const res = RequestAirdropRpcResult(unsafeRes);\n    if (res.error) {\n      throw new Error(res.error.message);\n    }\n    assert(typeof res.result !== 'undefined');\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   */\n  async sendTransaction(from: Account, transaction: Transaction): Promise<TransactionSignature> {\n    transaction.lastId = await this.getLastId();\n    transaction.sign(from);\n\n    const wireTransaction = transaction.serialize();\n    const unsafeRes = await this._rpcRequest('sendTransaction', [[...wireTransaction]]);\n    const res = SendTokensRpcResult(unsafeRes);\n    if (res.error) {\n      throw new Error(res.error.message);\n    }\n    assert(typeof res.result !== 'undefined');\n    assert(res.result);\n    return res.result;\n  }\n}\n",
    "static": true,
    "longname": "/home/travis/build/solana-labs/solana-web3.js/src/connection.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 75,
    "kind": "function",
    "name": "createRpcRequest",
    "memberof": "src/connection.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/connection.js~createRpcRequest",
    "access": "public",
    "export": false,
    "importPath": "@solana/web3",
    "importStyle": null,
    "description": " ",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RpcRequest"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 76,
    "kind": "variable",
    "name": "GetBalanceRpcResult",
    "memberof": "src/connection.js",
    "static": true,
    "longname": "src/connection.js~GetBalanceRpcResult",
    "access": "public",
    "export": false,
    "importPath": "@solana/web3",
    "importStyle": null,
    "description": "Expected JSON RPC response for the \"getBalance\" message",
    "lineNumber": 53,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 77,
    "kind": "function",
    "name": "jsonRpcResult",
    "memberof": "src/connection.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/connection.js~jsonRpcResult",
    "access": "private",
    "export": false,
    "importPath": "@solana/web3",
    "importStyle": null,
    "description": " ",
    "lineNumber": 64,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "resultDescription",
        "description": ""
      }
    ],
    "ignore": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 78,
    "kind": "variable",
    "name": "GetAccountInfoRpcResult",
    "memberof": "src/connection.js",
    "static": true,
    "longname": "src/connection.js~GetAccountInfoRpcResult",
    "access": "public",
    "export": false,
    "importPath": "@solana/web3",
    "importStyle": null,
    "description": "Expected JSON RPC response for the \"getAccountInfo\" message",
    "lineNumber": 85,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 79,
    "kind": "variable",
    "name": "ConfirmTransactionRpcResult",
    "memberof": "src/connection.js",
    "static": true,
    "longname": "src/connection.js~ConfirmTransactionRpcResult",
    "access": "public",
    "export": false,
    "importPath": "@solana/web3",
    "importStyle": null,
    "description": "Expected JSON RPC response for the \"confirmTransaction\" message",
    "lineNumber": 95,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 80,
    "kind": "variable",
    "name": "GetSignatureStatusRpcResult",
    "memberof": "src/connection.js",
    "static": true,
    "longname": "src/connection.js~GetSignatureStatusRpcResult",
    "access": "public",
    "export": false,
    "importPath": "@solana/web3",
    "importStyle": null,
    "description": "Expected JSON RPC response for the \"getSignatureStatus\" message",
    "lineNumber": 100,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 81,
    "kind": "variable",
    "name": "GetTransactionCountRpcResult",
    "memberof": "src/connection.js",
    "static": true,
    "longname": "src/connection.js~GetTransactionCountRpcResult",
    "access": "public",
    "export": false,
    "importPath": "@solana/web3",
    "importStyle": null,
    "description": "Expected JSON RPC response for the \"getTransactionCount\" message",
    "lineNumber": 110,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 82,
    "kind": "variable",
    "name": "GetLastId",
    "memberof": "src/connection.js",
    "static": true,
    "longname": "src/connection.js~GetLastId",
    "access": "public",
    "export": false,
    "importPath": "@solana/web3",
    "importStyle": null,
    "description": "Expected JSON RPC response for the \"getLastId\" message",
    "lineNumber": 115,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 83,
    "kind": "variable",
    "name": "GetFinalityRpcResult",
    "memberof": "src/connection.js",
    "static": true,
    "longname": "src/connection.js~GetFinalityRpcResult",
    "access": "public",
    "export": false,
    "importPath": "@solana/web3",
    "importStyle": null,
    "description": "Expected JSON RPC response for the \"getFinality\" message",
    "lineNumber": 120,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 84,
    "kind": "variable",
    "name": "RequestAirdropRpcResult",
    "memberof": "src/connection.js",
    "static": true,
    "longname": "src/connection.js~RequestAirdropRpcResult",
    "access": "public",
    "export": false,
    "importPath": "@solana/web3",
    "importStyle": null,
    "description": "Expected JSON RPC response for the \"requestAirdrop\" message",
    "lineNumber": 125,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 85,
    "kind": "variable",
    "name": "SendTokensRpcResult",
    "memberof": "src/connection.js",
    "static": true,
    "longname": "src/connection.js~SendTokensRpcResult",
    "access": "public",
    "export": false,
    "importPath": "@solana/web3",
    "importStyle": null,
    "description": "Expected JSON RPC response for the \"sendTransaction\" message",
    "lineNumber": 130,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 86,
    "kind": "typedef",
    "name": "AccountInfo",
    "memberof": "src/connection.js",
    "static": true,
    "longname": "src/connection.js~AccountInfo",
    "access": "public",
    "description": "Information describing an account",
    "lineNumber": 140,
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "tokens",
        "description": "Number of tokens assigned to the account"
      },
      {
        "nullable": null,
        "types": [
          "PublicKey"
        ],
        "spread": false,
        "optional": false,
        "name": "programId",
        "description": "Identifier of the program assigned to the account"
      },
      {
        "nullable": true,
        "types": [
          "Buffer"
        ],
        "spread": false,
        "optional": false,
        "name": "userdata",
        "description": "Optional userdata assigned to the account"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "AccountInfo"
    }
  },
  {
    "__docId__": 87,
    "kind": "typedef",
    "name": "SignatureStatus",
    "memberof": "src/connection.js",
    "static": true,
    "longname": "src/connection.js~SignatureStatus",
    "access": "public",
    "description": "Possible signature status values",
    "lineNumber": 151,
    "type": {
      "types": [
        "string"
      ],
      "optional": false,
      "name": "SignatureStatus"
    }
  },
  {
    "__docId__": 88,
    "kind": "class",
    "name": "Connection",
    "memberof": "src/connection.js",
    "static": true,
    "longname": "src/connection.js~Connection",
    "access": "public",
    "export": true,
    "importPath": "@solana/web3",
    "importStyle": "{Connection}",
    "description": "A connection to a fullnode JSON RPC endpoint",
    "lineNumber": 156,
    "interface": false
  },
  {
    "__docId__": 89,
    "kind": "member",
    "name": "_rpcRequest",
    "memberof": "src/connection.js~Connection",
    "static": false,
    "longname": "src/connection.js~Connection#_rpcRequest",
    "access": "private",
    "description": "",
    "lineNumber": 157,
    "type": {
      "nullable": null,
      "types": [
        "RpcRequest"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 90,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/connection.js~Connection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/connection.js~Connection#constructor",
    "access": "public",
    "description": "Establish a JSON RPC connection ",
    "lineNumber": 164,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "endpoint",
        "description": "URL to the fullnode JSON RPC endpoint"
      }
    ]
  },
  {
    "__docId__": 92,
    "kind": "method",
    "name": "getBalance",
    "memberof": "src/connection.js~Connection",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/connection.js~Connection#getBalance",
    "access": "public",
    "description": "Fetch the balance for the specified public key  ",
    "lineNumber": 174,
    "params": [
      {
        "nullable": null,
        "types": [
          "PublicKey"
        ],
        "spread": false,
        "optional": false,
        "name": "publicKey",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<number>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 93,
    "kind": "method",
    "name": "getAccountInfo",
    "memberof": "src/connection.js~Connection",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/connection.js~Connection#getAccountInfo",
    "access": "public",
    "description": "Fetch all the account info for the specified public key  ",
    "lineNumber": 190,
    "params": [
      {
        "nullable": null,
        "types": [
          "PublicKey"
        ],
        "spread": false,
        "optional": false,
        "name": "publicKey",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<AccountInfo>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 94,
    "kind": "method",
    "name": "confirmTransaction",
    "memberof": "src/connection.js~Connection",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/connection.js~Connection#confirmTransaction",
    "access": "public",
    "description": "Confirm the transaction identified by the specified signature  ",
    "lineNumber": 217,
    "params": [
      {
        "nullable": null,
        "types": [
          "TransactionSignature"
        ],
        "spread": false,
        "optional": false,
        "name": "signature",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<boolean>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "getSignatureStatus",
    "memberof": "src/connection.js~Connection",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/connection.js~Connection#getSignatureStatus",
    "access": "public",
    "description": "Fetch the current transaction count of the network  ",
    "lineNumber": 233,
    "params": [
      {
        "nullable": null,
        "types": [
          "TransactionSignature"
        ],
        "spread": false,
        "optional": false,
        "name": "signature",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<SignatureStatus>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "getTransactionCount",
    "memberof": "src/connection.js~Connection",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/connection.js~Connection#getTransactionCount",
    "access": "public",
    "description": "Fetch the current transaction count of the network  ",
    "lineNumber": 247,
    "return": {
      "nullable": null,
      "types": [
        "Promise<number>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "getLastId",
    "memberof": "src/connection.js~Connection",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/connection.js~Connection#getLastId",
    "access": "public",
    "description": "Fetch the identifier to the latest transaction on the network  ",
    "lineNumber": 260,
    "return": {
      "nullable": null,
      "types": [
        "Promise<TransactionId>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 98,
    "kind": "method",
    "name": "getFinality",
    "memberof": "src/connection.js~Connection",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/connection.js~Connection#getFinality",
    "access": "public",
    "description": "Return the current network finality time in millliseconds  ",
    "lineNumber": 273,
    "return": {
      "nullable": null,
      "types": [
        "Promise<number>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "requestAirdrop",
    "memberof": "src/connection.js~Connection",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/connection.js~Connection#requestAirdrop",
    "access": "public",
    "description": "Request an allocation of tokens to the specified account  ",
    "lineNumber": 286,
    "params": [
      {
        "nullable": null,
        "types": [
          "PublicKey"
        ],
        "spread": false,
        "optional": false,
        "name": "to",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "amount",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<TransactionSignature>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 100,
    "kind": "method",
    "name": "sendTransaction",
    "memberof": "src/connection.js~Connection",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/connection.js~Connection#sendTransaction",
    "access": "public",
    "description": "Sign and send a transaction  ",
    "lineNumber": 299,
    "params": [
      {
        "nullable": null,
        "types": [
          "Account"
        ],
        "spread": false,
        "optional": false,
        "name": "from",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Transaction"
        ],
        "spread": false,
        "optional": false,
        "name": "transaction",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<TransactionSignature>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 101,
    "kind": "file",
    "name": "src/index.js",
    "content": "// @flow\nexport {Account} from './account';\nexport {Connection} from './connection';\nexport {Transaction} from './transaction';\nexport {SystemProgram} from './system-program';\nexport {BudgetProgram} from './budget-program';\n",
    "static": true,
    "longname": "/home/travis/build/solana-labs/solana-web3.js/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 102,
    "kind": "file",
    "name": "src/system-program.js",
    "content": "// @flow\n\nimport assert from 'assert';\n\nimport {Transaction} from './transaction';\nimport type {PublicKey} from './account';\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * Public key that identifies the System program\n   */\n  static get programId(): PublicKey {\n    return '11111111111111111111111111111111';\n  }\n\n  /**\n   * Generate a Transaction that creates a new account\n   */\n  static createAccount(\n    from: PublicKey,\n    newAccount: PublicKey,\n    tokens: number,\n    space: number,\n    programId: PublicKey\n  ): Transaction {\n    const userdata = Buffer.alloc(4 + 8 + 8 + 1 + 32);\n    let pos = 0;\n\n    userdata.writeUInt32LE(0, pos); // Create Account instruction\n    pos += 4;\n\n    userdata.writeUInt32LE(tokens, pos); // tokens as i64\n    pos += 8;\n\n    userdata.writeUInt32LE(space, pos); // space as u64\n    pos += 8;\n\n    const programIdBytes = Transaction.serializePublicKey(programId);\n    programIdBytes.copy(userdata, pos);\n    pos += 32;\n\n    assert(pos <= userdata.length);\n\n    return new Transaction({\n      fee: 0,\n      keys: [from, newAccount],\n      programId: SystemProgram.programId,\n      userdata,\n    });\n  }\n\n  /**\n   * Generate a Transaction that moves tokens from one account to another\n   */\n  static move(from: PublicKey, to: PublicKey, amount: number): Transaction {\n    const userdata = Buffer.alloc(4 + 8);\n    let pos = 0;\n    userdata.writeUInt32LE(2, pos); // Move instruction\n    pos += 4;\n\n    userdata.writeUInt32LE(amount, pos); // amount as u64\n    pos += 8;\n\n    assert(pos === userdata.length);\n\n    return new Transaction({\n      fee: 0,\n      keys: [from, to],\n      programId: SystemProgram.programId,\n      userdata,\n    });\n  }\n\n  /**\n   * Generate a Transaction that assigns an account to a program\n   */\n  static assign(from: PublicKey, programId: PublicKey): Transaction {\n    const userdata = Buffer.alloc(4 + 32);\n    let pos = 0;\n\n    userdata.writeUInt32LE(1, pos); // Assign instruction\n    pos += 4;\n\n    const programIdBytes = Transaction.serializePublicKey(programId);\n    programIdBytes.copy(userdata, pos);\n    pos += programIdBytes.length;\n\n    assert(pos === userdata.length);\n\n    return new Transaction({\n      fee: 0,\n      keys: [from],\n      programId: SystemProgram.programId,\n      userdata,\n    });\n  }\n}\n",
    "static": true,
    "longname": "/home/travis/build/solana-labs/solana-web3.js/src/system-program.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 103,
    "kind": "class",
    "name": "SystemProgram",
    "memberof": "src/system-program.js",
    "static": true,
    "longname": "src/system-program.js~SystemProgram",
    "access": "public",
    "export": true,
    "importPath": "@solana/web3",
    "importStyle": "{SystemProgram}",
    "description": "Factory class for transactions to interact with the System program",
    "lineNumber": 11,
    "interface": false
  },
  {
    "__docId__": 104,
    "kind": "get",
    "name": "programId",
    "memberof": "src/system-program.js~SystemProgram",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/system-program.js~SystemProgram.programId",
    "access": "public",
    "description": "Public key that identifies the System program ",
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "PublicKey"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 105,
    "kind": "method",
    "name": "createAccount",
    "memberof": "src/system-program.js~SystemProgram",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/system-program.js~SystemProgram.createAccount",
    "access": "public",
    "description": "Generate a Transaction that creates a new account  ",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "PublicKey"
        ],
        "spread": false,
        "optional": false,
        "name": "from",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "PublicKey"
        ],
        "spread": false,
        "optional": false,
        "name": "newAccount",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "tokens",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "space",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "PublicKey"
        ],
        "spread": false,
        "optional": false,
        "name": "programId",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Transaction"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 106,
    "kind": "method",
    "name": "move",
    "memberof": "src/system-program.js~SystemProgram",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/system-program.js~SystemProgram.move",
    "access": "public",
    "description": "Generate a Transaction that moves tokens from one account to another  ",
    "lineNumber": 58,
    "params": [
      {
        "nullable": null,
        "types": [
          "PublicKey"
        ],
        "spread": false,
        "optional": false,
        "name": "from",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "PublicKey"
        ],
        "spread": false,
        "optional": false,
        "name": "to",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "amount",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Transaction"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "assign",
    "memberof": "src/system-program.js~SystemProgram",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/system-program.js~SystemProgram.assign",
    "access": "public",
    "description": "Generate a Transaction that assigns an account to a program  ",
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "PublicKey"
        ],
        "spread": false,
        "optional": false,
        "name": "from",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "PublicKey"
        ],
        "spread": false,
        "optional": false,
        "name": "programId",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Transaction"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 108,
    "kind": "file",
    "name": "src/transaction.js",
    "content": "// @flow\n\nimport assert from 'assert';\nimport nacl from 'tweetnacl';\nimport bs58 from 'bs58';\n\nimport type {Account, PublicKey} from './account';\n\n/**\n * @typedef {string} TransactionSignature\n */\nexport type TransactionSignature = string;\n\n/**\n * @typedef {string} TransactionId\n */\nexport type TransactionId = string;\n\n/**\n * List of Transaction object fields that may be initialized at construction\n *\n * @typedef {Object} TransactionCtorFields\n * @property {?Buffer} signature\n * @property {?Array<PublicKey>} keys\n * @property {?PublicKey} programId\n * @property {?number} fee\n * @property {?Buffer} userdata\n */\ntype TransactionCtorFields = {|\n  signature?: Buffer;\n  keys?: Array<PublicKey>;\n  programId?: PublicKey;\n  fee?: number;\n  userdata?: Buffer;\n|};\n\n/**\n * Mirrors the Transaction struct in src/transaction.rs\n */\nexport class Transaction {\n\n  /**\n   * Current signature of the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signature: ?Buffer;\n\n  /**\n   * Public keys to include in this transaction\n   */\n  keys: Array<PublicKey> = [];\n\n  /**\n   * Program Id to execute\n   */\n  programId: ?PublicKey;\n\n  /**\n   * A recent transaction id.  Must be populated by the caller\n   */\n  lastId: ?TransactionId;\n\n  /**\n   * Fee for this transaction\n   */\n  fee: number = 0;\n\n  /**\n   * Program input\n   */\n  userdata: Buffer = Buffer.alloc(0);\n\n  constructor(opts?: TransactionCtorFields) {\n    opts && Object.assign(this, opts);\n  }\n\n  /**\n   * @private\n   */\n  _getSignData(): Buffer {\n    const {lastId} = this;\n    if (!lastId) {\n      throw new Error('Transaction lastId required');\n    }\n\n    // Start with a Buffer that should be large enough to fit any Transaction\n    const transactionData = Buffer.alloc(2048);\n\n    let pos = 0;\n\n    // serialize `this.keys`\n    transactionData.writeUInt32LE(this.keys.length, pos);  // u64\n    pos += 8;\n    for (let key of this.keys) {\n      const keyBytes = Transaction.serializePublicKey(key);\n      keyBytes.copy(transactionData, pos);\n      pos += 32;\n    }\n\n    // serialize `this.programId`\n    if (this.programId) {\n      const keyBytes = Transaction.serializePublicKey(this.programId);\n      keyBytes.copy(transactionData, pos);\n    }\n    pos += 32;\n\n    // serialize `this.lastId`\n    {\n      const lastIdBytes = Buffer.from(bs58.decode(lastId));\n      assert(lastIdBytes.length === 32);\n      lastIdBytes.copy(transactionData, pos);\n      pos += 32;\n    }\n\n    // serialize `this.fee`\n    transactionData.writeUInt32LE(this.fee, pos);        // u64\n    pos += 8;\n\n    // serialize `this.userdata`\n    if (this.userdata.length > 0) {\n      transactionData.writeUInt32LE(this.userdata.length, pos);  // u64\n      pos += 8;\n      this.userdata.copy(transactionData, pos);\n      pos += this.userdata.length;\n    }\n\n    return transactionData.slice(0, pos);\n  }\n\n  /**\n   * Sign the Transaction with the specified account\n   *\n   * The Transaction must be assigned a valid `lastId` before invoking this method\n   */\n  sign(from: Account) {\n    const transactionData = this._getSignData();\n    this.signature = nacl.sign.detached(transactionData, from.secretKey);\n    assert(this.signature.length === 64);\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   *\n   * The Transaction must have a valid `signature` before invoking this method\n   */\n  serialize(): Buffer {\n    const {signature} = this;\n    if (!signature) {\n      throw new Error('Transaction has not been signed');\n    }\n\n    const transactionData = this._getSignData();\n    const wireTransaction = Buffer.alloc(\n      signature.length + transactionData.length\n    );\n\n    Buffer.from(signature).copy(wireTransaction, 0);\n    transactionData.copy(wireTransaction, signature.length);\n    return wireTransaction;\n  }\n\n  /**\n   * Serializes a public key into the wire format\n   */\n  static serializePublicKey(key: PublicKey): Buffer {\n    const data = Buffer.from(bs58.decode(key));\n    assert(data.length === 32);\n    return data;\n  }\n}\n\n",
    "static": true,
    "longname": "/home/travis/build/solana-labs/solana-web3.js/src/transaction.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 109,
    "kind": "typedef",
    "name": "TransactionSignature",
    "memberof": "src/transaction.js",
    "static": true,
    "longname": "src/transaction.js~TransactionSignature",
    "access": "public",
    "description": "",
    "lineNumber": 12,
    "type": {
      "types": [
        "string"
      ],
      "optional": false,
      "name": "TransactionSignature"
    }
  },
  {
    "__docId__": 110,
    "kind": "typedef",
    "name": "TransactionId",
    "memberof": "src/transaction.js",
    "static": true,
    "longname": "src/transaction.js~TransactionId",
    "access": "public",
    "description": "",
    "lineNumber": 17,
    "type": {
      "types": [
        "string"
      ],
      "optional": false,
      "name": "TransactionId"
    }
  },
  {
    "__docId__": 111,
    "kind": "typedef",
    "name": "TransactionCtorFields",
    "memberof": "src/transaction.js",
    "static": true,
    "longname": "src/transaction.js~TransactionCtorFields",
    "access": "public",
    "description": "List of Transaction object fields that may be initialized at construction",
    "lineNumber": 29,
    "properties": [
      {
        "nullable": true,
        "types": [
          "Buffer"
        ],
        "spread": false,
        "optional": false,
        "name": "signature",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Array<PublicKey>"
        ],
        "spread": false,
        "optional": false,
        "name": "keys",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "PublicKey"
        ],
        "spread": false,
        "optional": false,
        "name": "programId",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "fee",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Buffer"
        ],
        "spread": false,
        "optional": false,
        "name": "userdata",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "TransactionCtorFields"
    }
  },
  {
    "__docId__": 112,
    "kind": "class",
    "name": "Transaction",
    "memberof": "src/transaction.js",
    "static": true,
    "longname": "src/transaction.js~Transaction",
    "access": "public",
    "export": true,
    "importPath": "@solana/web3",
    "importStyle": "{Transaction}",
    "description": "Mirrors the Transaction struct in src/transaction.rs",
    "lineNumber": 40,
    "interface": false
  },
  {
    "__docId__": 113,
    "kind": "member",
    "name": "signature",
    "memberof": "src/transaction.js~Transaction",
    "static": false,
    "longname": "src/transaction.js~Transaction#signature",
    "access": "public",
    "description": "Current signature of the transaction.  Typically created by invoking the\n`sign()` method ",
    "lineNumber": 46,
    "type": {
      "nullable": true,
      "types": [
        "Buffer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 114,
    "kind": "member",
    "name": "keys",
    "memberof": "src/transaction.js~Transaction",
    "static": false,
    "longname": "src/transaction.js~Transaction#keys",
    "access": "public",
    "description": "Public keys to include in this transaction ",
    "lineNumber": 51,
    "type": {
      "nullable": null,
      "types": [
        "Array<PublicKey>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 115,
    "kind": "member",
    "name": "programId",
    "memberof": "src/transaction.js~Transaction",
    "static": false,
    "longname": "src/transaction.js~Transaction#programId",
    "access": "public",
    "description": "Program Id to execute ",
    "lineNumber": 56,
    "type": {
      "nullable": true,
      "types": [
        "PublicKey"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 116,
    "kind": "member",
    "name": "lastId",
    "memberof": "src/transaction.js~Transaction",
    "static": false,
    "longname": "src/transaction.js~Transaction#lastId",
    "access": "public",
    "description": "A recent transaction id.  Must be populated by the caller ",
    "lineNumber": 61,
    "type": {
      "nullable": true,
      "types": [
        "TransactionId"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 117,
    "kind": "member",
    "name": "fee",
    "memberof": "src/transaction.js~Transaction",
    "static": false,
    "longname": "src/transaction.js~Transaction#fee",
    "access": "public",
    "description": "Fee for this transaction ",
    "lineNumber": 66,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 118,
    "kind": "member",
    "name": "userdata",
    "memberof": "src/transaction.js~Transaction",
    "static": false,
    "longname": "src/transaction.js~Transaction#userdata",
    "access": "public",
    "description": "Program input ",
    "lineNumber": 71,
    "type": {
      "nullable": null,
      "types": [
        "Buffer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 119,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/transaction.js~Transaction",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/transaction.js~Transaction#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 73,
    "params": [
      {
        "nullable": null,
        "types": [
          "TransactionCtorFields"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 120,
    "kind": "method",
    "name": "_getSignData",
    "memberof": "src/transaction.js~Transaction",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/transaction.js~Transaction#_getSignData",
    "access": "private",
    "description": "  ",
    "lineNumber": 80,
    "return": {
      "nullable": null,
      "types": [
        "Buffer"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true,
    "params": []
  },
  {
    "__docId__": 121,
    "kind": "method",
    "name": "sign",
    "memberof": "src/transaction.js~Transaction",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/transaction.js~Transaction#sign",
    "access": "public",
    "description": "Sign the Transaction with the specified account\n\nThe Transaction must be assigned a valid `lastId` before invoking this method ",
    "lineNumber": 135,
    "params": [
      {
        "nullable": null,
        "types": [
          "Account"
        ],
        "spread": false,
        "optional": false,
        "name": "from",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "serialize",
    "memberof": "src/transaction.js~Transaction",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/transaction.js~Transaction#serialize",
    "access": "public",
    "description": "Serialize the Transaction in the wire format.\n\nThe Transaction must have a valid `signature` before invoking this method  ",
    "lineNumber": 146,
    "return": {
      "nullable": null,
      "types": [
        "Buffer"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "serializePublicKey",
    "memberof": "src/transaction.js~Transaction",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/transaction.js~Transaction.serializePublicKey",
    "access": "public",
    "description": "Serializes a public key into the wire format  ",
    "lineNumber": 165,
    "params": [
      {
        "nullable": null,
        "types": [
          "PublicKey"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Buffer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "kind": "index",
    "content": "[![Build status][travis-image]][travis-url]\n[![codecov][codecov-image]][codecov-url]\n[![esdoc][esdoc-image]][esdoc-url]\n<br>\n[![npm][npm-image]][npm-url]\n[![npm-downloads][npm-downloads-image]][npm-url]\n[![david][david-deps-image]][david-deps-url]\n[![david][david-dev-deps-image]][david-dev-deps-url]\n\n[travis-image]: https://api.travis-ci.org/solana-labs/solana-web3.js.svg?branch=master\n[travis-url]: https://travis-ci.org/solana-labs/solana-web3.js\n[codecov-image]: https://codecov.io/gh/solana-labs/solana-web3.js/branch/master/graph/badge.svg\n[codecov-url]: https://codecov.io/gh/solana-labs/solana-web3.js\n[esdoc-image]: https://solana-labs.github.io/solana-web3.js/badge.svg\n[npm-image]: https://img.shields.io/npm/v/@solana/web3.js.svg?style=flat\n[npm-downloads-image]: https://img.shields.io/npm/dm/@solana/web3.js.svg?style=flat\n[esdoc-url]: https://solana-labs.github.io/solana-web3.js/\n[npm-url]: https://www.npmjs.com/package/@solana/web3.js\n[david-deps-image]: https://david-dm.org/solana-labs/solana-web3.js.svg\n[david-deps-url]: https://david-dm.org/solana-labs/solana-web3.js\n[david-dev-deps-image]: https://david-dm.org/solana-labs/solana-web3.js/dev-status.svg\n[david-dev-deps-url]: https://david-dm.org/solana-labs/solana-web3.js?type=dev\n\n# Solana JavaScript API\n\nThis is the Solana Javascript API built on the Solana [JSON RPC API](https://github.com/solana-labs/solana/blob/master/doc/json-rpc.md)\n\n[Latest API Documentation](https://solana-labs.github.io/solana-web3.js/)\n\n\n## Installation\n\n### Yarn\n```\n$ yarn add @solana/web3.js\n```\n\n### npm\n```\n$ npm install --save @solana/web3.js\n```\n\n### Browser bundle\n```html\n<script src=\"https://github.com/solana-labs/solana-web3.js/releases/download/v0.0.6/solanaWeb3.min.js\"></script>\n```\n\n## Usage\n\n### Javascript\n```js\nconst solanaWeb3 = require('@solana/web3.js');\nconsole.log(solanaWeb3);\n```\n\n### ES6\n```js\nimport solanaWeb3 from '@solana/web3.js';\nconsole.log(solanaWeb3);\n```\n\n### Browser bundle\n```js\n// `solanaWeb3` is provided in the global namespace by the `solanaWeb3.min.js` script bundle.\nconsole.log(solanaWeb3);\n```\n\n## Examples\nSee the [examples/](https://github.com/solana-labs/solana-web3.js/tree/master/examples) directory for small snippets.\n\nStandalone examples:\n* Web wallet: https://github.com/solana-labs/example-webwallet\n* Tic-tac-toe: https://github.com/solana-labs/example-tictactoe\n\n## Releases\nReleases are available on [Github](https://github.com/solana-labs/solana-web3.js/releases)\nand [npmjs.com](https://www.npmjs.com/package/@solana/web3.js)\n\nEach Github release features a tarball containing API documentation and a\nminified version of the module suitable for direct use in a browser environment\n(&lt;script&gt; tag)\n",
    "longname": "/home/travis/build/solana-labs/solana-web3.js/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"@solana/web3.js\",\n  \"version\": \"0.0.7-2\",\n  \"description\": \"Solana Javascript API\",\n  \"keywords\": [\n    \"api\",\n    \"blockchain\"\n  ],\n  \"license\": \"MIT\",\n  \"author\": \"Solana Labs, Inc\",\n  \"homepage\": \"https://solana.com/\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"http://github.com/solana-labs/solana-web3.js.git\"\n  },\n  \"bugs\": {\n    \"url\": \"http://github.com/solana-labs/solana-web3.js.git/issues\"\n  },\n  \"publishConfig\": {\n    \"access\": \"public\"\n  },\n  \"main\": \"lib/index.cjs.js\",\n  \"module\": \"lib/index.esm.js\",\n  \"scripts\": {\n    \"clean\": \"rimraf ./coverage ./lib\",\n    \"dev\": \"cross-env NODE_ENV=development rollup -c\",\n    \"build\": \"cross-env NODE_ENV=production rollup -c\",\n    \"doc\": \"esdoc; node -p '\\\"\\\\nDocumentation coverage: \\\" + require(\\\"./doc/coverage.json\\\").coverage'\",\n    \"doc:watch\": \"watch 'npm run doc' . --wait=1 --ignoreDirectoryPattern=/doc/\",\n    \"test\": \"cross-env NODE_ENV=test jest --useStderr\",\n    \"test:live\": \"cross-env NODE_ENV=test DOITLIVE=1 jest --useStderr\",\n    \"test:watch\": \"cross-env NODE_ENV=test jest --watch --useStderr\",\n    \"test:cover\": \"cross-env NODE_ENV=test jest --coverage --useStderr\",\n    \"codecov\": \"npm run test:cover && cat ./coverage/lcov.info | codecov\",\n    \"flow\": \"flow-typed install jest@22 && flow\",\n    \"flow:watch\": \"watch 'flow' . --wait=1 --ignoreDirectoryPattern=/doc/\",\n    \"lint\": \"eslint .\",\n    \"lint:fix\": \"npm run lint -- --fix\",\n    \"lint:watch\": \"watch 'npm run lint:fix' . --wait=1 --ignoreDirectoryPattern=/doc/\",\n    \"ok\": \"npm run lint && npm run flow && npm run test && npm run doc\",\n    \"prepare\": \"npm run clean && npm run ok && npm run build\"\n  },\n  \"dependencies\": {\n    \"babel-runtime\": \"^6.26.0\",\n    \"bs58\": \"^4.0.1\",\n    \"jayson\": \"^2.0.6\",\n    \"node-fetch\": \"^2.2.0\",\n    \"superstruct\": \"^0.6.0\",\n    \"tweetnacl\": \"^1.0.0\"\n  },\n  \"devDependencies\": {\n    \"babel-core\": \"6.26.3\",\n    \"babel-eslint\": \"10.0.0\",\n    \"babel-plugin-module-resolver\": \"3.1.1\",\n    \"babel-plugin-transform-runtime\": \"^6.23.0\",\n    \"babel-preset-env\": \"1.7.0\",\n    \"babel-preset-flow\": \"6.23.0\",\n    \"babel-preset-stage-0\": \"6.24.1\",\n    \"codecov\": \"^3.0.4\",\n    \"cross-env\": \"5.2.0\",\n    \"enzyme\": \"3.6.0\",\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-flow-type-plugin\": \"^1.1.0\",\n    \"esdoc-importpath-plugin\": \"^1.0.2\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"5.6.0\",\n    \"eslint-plugin-import\": \"2.14.0\",\n    \"eslint-plugin-jest\": \"21.22.1\",\n    \"flow-bin\": \"0.81.0\",\n    \"flow-typed\": \"2.5.1\",\n    \"fs-file-tree\": \"1.0.6\",\n    \"jest\": \"23.6.0\",\n    \"rimraf\": \"2.6.2\",\n    \"rollup\": \"0.66.2\",\n    \"rollup-plugin-babel\": \"3.0.3\",\n    \"rollup-plugin-commonjs\": \"9.1.8\",\n    \"rollup-plugin-json\": \"^3.0.0\",\n    \"rollup-plugin-node-builtins\": \"^2.1.2\",\n    \"rollup-plugin-node-globals\": \"^1.2.1\",\n    \"rollup-plugin-node-resolve\": \"3.4.0\",\n    \"rollup-plugin-replace\": \"2.0.0\",\n    \"rollup-plugin-uglify\": \"3.0.0\",\n    \"watch\": \"^1.0.2\"\n  }\n}\n",
    "longname": "/home/travis/build/solana-labs/solana-web3.js/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]